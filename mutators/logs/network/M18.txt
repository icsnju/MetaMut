
Q>>>>>>>>0:00:00.000000
You're working on a sophisticated task, creating a semantic-aware program mutator. We need to devise a new mutator for this purpose. 

Below is a list of mutators I've already implemented. To avoid redundancy, please ensure your proposed mutator is distinct from these:
```

AddRandomGotoStmt: Insert a new GotoStmt at a random position within a CompoundStmt excluding the last statement

ChangeBinop: Change binary expression's operator.

ChangeDeclRef: Change a DeclRefExpr's referenced variable.

ChangeRandomPointerInitialization: Randomly selects a PointerType variable initialization and changes its initialized value to another compatible pointer variable or null.

CompoundStmtGrouping: Group consecutive statements within a CompoundStmt.

DecayRandomArrayToPointer: Decay a randomly selected array variable to a pointer variable.

DecayRandomPointerToArray: Change a pointer declaration to an array declaration.

DecayRandomStructToUnion: Randomly select a struct declaration and convert it into a union

DuplicateBranch: Duplicates one branch of an if statement

DuplicateRandomUnaryOperator: Duplicate randomly selected UnaryOperator.

EmbedCompoundStmt: Embed a CompoundStmt inside another CompoundStmt

FlipLogicalOperator: Flip the logical operator in a LogicalExpr.

IncreasePointerLevel: Increase the pointer level of a variable.

InlineFunctionCall: Inline a function call with its body.

InlineRandomVarDecl: Inline a random VarDecl's initializer and remove the declaration.

InsertRandomArrayIndexMutation: Mutate an array index randomly.

InsertRandomFunctionCall: Insert a random function call in a CompoundStmt.

InsertRandomReturnStmt: Insert a return statement at a random position in a function

InsertRandomTypeConversion: Insert a random type conversion to a compatible type.

InsertRandomUnaryOperator: Insert a unary operator before a literal.

InterchangeFuncCalls: Interchange positions of two function calls within a CompoundStmt

InverseLogicalExpr: Inverse logical expressions.

InverseUnaryOperator: Inverses a Unary Operator

InvertFunctionCondition: Inverts the condition of a boolean function.

LiftNestedFunction: Lifts a function call to the outer level and replaces the original location with a new variable.

ModifyArrayDim: Modifies a random ArrayType variable's dimension.

ModifyRandomFieldOfStruct: Randomly selects a FieldDecl within a RecordDecl (Struct or Union), and changes its type to another compatible type from the existing types in the program.

ModifyRandomFieldOfStructMutator: This mutator modifies a random field of a struct.

MutateFunctionReturnType: Change return type of a non-void function to double and modify return statements.

MutateLoopBounds: Modify the loop control variable's initialization, condition, or increment/decrement statement.

MutatePointerTypeToDifferentType: Change pointer's pointed-to type.

NegateLiteral: Negate a selected Integer or Floating point Literal.

RandomizeCaseStmts: Randomly shuffles the order of CaseStmts in a SwitchStmt

RemoveRandomParameter: Randomly remove a non-essential parameter from a function declaration and adjust all call sites accordingly.

ReplaceBinaryOperatorWithEquivalent: Replace binary operator with an equivalent operation.

ReplaceFunctionCallWithConstant: Replace a function call with a constant value.

ReplaceLiteralWithConstant: Replace a literal with a global constant.

ReplaceReturnWithGlobal: Replace a function's return expression with a global variable.

ReplaceWithEquivalentUnaryExpr: Replace UnaryExpr with an equivalent UnaryExpr that uses a different operator.

ShiftFunctionParams: Shift the position of all parameters one place to the right.

SwapFuncDeclParams: Swap two parameters in a function declaration and its call sites

SwapNestedIfElse: Swap a nested if-else statement and inverse the condition.

SwapNestedLoops: Swap the bodies of inner and outer loop.

SwapRandomBinaryOperands: Swap operands of a random BinaryOperator's expression.

SwapRandomUnaryOperands: Swap operands of a random UnaryOperator's BinaryOperator sub-expression.

SwitchInitExpr: Switch initialization expressions of two VarDecls.

ToggleLoopType: Toggle between `for` and `while` loop types.

ToggleReturnExpr: Toggle return expression to default value.

ToggleStaticVarDecl: Toggle static and non-static for VarDecl

ToggleVarDeclInitialization: Toggle variable declaration initialization.

```

To aid in the development of a new mutator, consider manipulating the following elements through actions such as Addition, Modification, Combination, Copying, Decay, Inlining, Un-inlining, Duplication, Destruction, Grouping, Increase, Inversion, Lift, Mutation, Removal, Swap, Switch, or Toggle:
Initialization, InitExpr, UnaryOperator, CharLiteral, IntegerLiteral, Type, Decl->getType, ReturnExpr, VarDecl, Scope, StmtExpr, FieldDecl, BinaryOperator, Stmt, CompoundStmt, IfStmt, GotoStmt, WhileStmt, WhileStmt->getCond, StringLiteral, PointerType, Parameter, ArrayDimension, PointerLevel, LogicalExpr, Branches, CaseStmt, LabelStmt, FunctionDecl, FunctionDecl.type, TypeConversion, ExprStmt.

**Important Guidelines**:
- Your response should detail only a single mutator.
- The mutator should involve only one mutation operator (or verb) and one mutation target.
- The response should adhere strictly to the following format, with no additional information:
```
ShuffleStmts: This mutator randomly selects a subset of consecutive statements from a CompoundStmt, shuffles them, and replaces the original ith stmt with the ith shuffled stmt.
```
A<<<<<<<<0:00:15.642529
```
DecayRandomFunctionToPointer: This mutator selects a random FunctionDecl and replaces it with a function pointer declaration with the same return type and parameters, adjusting all call sites accordingly.
```
Q>>>>>>>>0:00:15.643694
Assist me in identifying test cases that can effectively apply the mutator named DecayRandomFunctionToPointer.

**Important Guidelines**
- Each test case should be presented in a separate code block.
- Each test case should be a complete, compilable, runnable program.
- Please use only C features
A<<<<<<<<0:00:50.988995
Here are a few test cases that can effectively apply the DecayRandomFunctionToPointer mutator:

**Test Case 1**
```c
#include <stdio.h>

void greet() {
    printf("Hello, world!");
}

int main() {
    greet();
    return 0;
}
```

In this test case, the greet function can be converted to a function pointer.

**Test Case 2**
```c
#include <stdio.h>

int add(int a, int b) {
    return a + b;
}

int main() {
    int sum = add(3, 4);
    printf("Sum: %d\n", sum);
    return 0;
}
```

In this test case, the add function could be converted into a function pointer.

**Test Case 3**
```c
#include <stdio.h>

double calculateArea(double radius) {
    return 3.14159265358979323846 * radius * radius;
}

int main() {
    double area = calculateArea(5.0);
    printf("Area: %.2lf\n", area);
    return 0;
}
```

In this test case, the calculateArea function could be converted into a function pointer.

**Test Case 4**
```c
#include <stdio.h>

void printArray(int arr[], int len) {
    for (int i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    printArray(arr, 5);
    return 0;
}
```

In this test case, the printArray function could be converted into a function pointer.

**Test Case 5**
```c
#include <stdio.h>

char toLower(char c) {
    if (c >= 'A' && c <= 'Z') {
        return c + 32;
    }
    return c;
}

int main() {
    char ch = 'A';
    printf("%c\n", toLower(ch));
    return 0;
}
```
In this test case, the toLower function could be converted into a function pointer.
Q>>>>>>>>0:00:51.337394
Assist me in implementing the mutator named DecayRandomFunctionToPointer. Below is the description of its functionality:
This mutator selects a random FunctionDecl and replaces it with a function pointer declaration with the same return type and parameters, adjusting all call sites accordingly.
```

You can utilize below's two example implementation as a reference:

Example implementation for mutator ChangeDeclRef.
```cpp
// ChangeDeclRef.cpp
#include <clang/AST/RecursiveASTVisitor.h>
#include <clang/AST/Stmt.h>
#include <clang/Basic/SourceManager.h>
#include <clang/Sema/Sema.h>

#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

class ChangeDeclRef : public Mutator,
                      public clang::RecursiveASTVisitor<ChangeDeclRef> {

  using VisitorTy = clang::RecursiveASTVisitor<ChangeDeclRef>;

public:
  using Mutator::Mutator;
  bool mutate() override {
    TheVars.push_back({});
    TraverseAST(getASTContext());
    if (TheRefs.empty() || TheVars.empty()) return false;

    DeclRefExpr *ref = randElement(TheRefs);
    if (!isa<VarDecl>(ref->getDecl()))
      return false; // Ensure the Decl is actually a VarDecl

    VarDecl *oldVar = cast<VarDecl>(ref->getDecl());
    if (ExprVarsMap[ref].size() == 0) return false;

    VarDecl *newVar = randElement(ExprVarsMap[ref]);
    if (oldVar == newVar) return false;

    // Replace the old variable with the new one
    getRewriter().ReplaceText(ref->getSourceRange(), newVar->getNameAsString());

    return true;
  }

  bool VisitDeclRefExpr(clang::DeclRefExpr *DRE) {
    if (isMutationSite(DRE)) {
      TheRefs.push_back(DRE);
      ExprVarsMap[DRE] = TheVars.back();
    }
    return true;
  }

  bool VisitVarDecl(clang::VarDecl *VD) {
    if (!TheVars.empty()) { TheVars.back().push_back(VD); }
    return true;
  }

  bool TraverseCompoundStmt(clang::CompoundStmt *CS) {
    if (!TheVars.empty()) {
      // Push a copy of the current set of variables
      TheVars.push_back(TheVars.back());
    } else {
      // Create the first set of variables
      TheVars.push_back({});
    }

    VisitorTy::TraverseCompoundStmt(CS);
    TheVars.pop_back();
    return true;
  }

  bool TraverseFunctionDecl(clang::FunctionDecl *FD) {
    TheVars.push_back(TheVars.back());
    VisitorTy::TraverseFunctionDecl(FD);
    TheVars.pop_back();
    return true;
  }

private:
  std::map<clang::DeclRefExpr *, std::vector<clang::VarDecl *>> ExprVarsMap;
  std::vector<clang::DeclRefExpr *> TheRefs;
  std::vector<std::vector<clang::VarDecl *>> TheVars;
};

static RegisterMutator<ChangeDeclRef> M(
    "ChangeDeclRef", "Change a DeclRefExpr's referenced variable.");
```

Example implementation for mutator ChangeBinop.
```cpp
// ChangeBinop.cpp
#include <clang/AST/ASTContext.h>
#include <clang/AST/Expr.h>
#include <clang/AST/RecursiveASTVisitor.h>
#include <clang/AST/Stmt.h>
#include <clang/Basic/SourceManager.h>
#include <clang/Sema/Sema.h>

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

class ChangeBinop
    : public Mutator,
      public clang::RecursiveASTVisitor<ChangeBinop> {
public:
  using Mutator::Mutator;
  bool mutate() override {
    TraverseAST(getASTContext());
    if (TheOperators.empty()) return false;

    BinaryOperator *expr = randElement(TheOperators);

    // perform rewrite
    auto newOps = computeValidAlternatives(expr);
    BinaryOperatorKind newOpKind = newOps[randIndex(newOps.size())];
    SourceLocation OpLoc = expr->getOperatorLoc();
    std::string NewOp = BinaryOperator::getOpcodeStr(newOpKind).str();
    getRewriter().ReplaceText(
        OpLoc, expr->getOpcodeStr(expr->getOpcode()).size(), NewOp);

    return true;
  }

  bool VisitBinaryOperator(clang::BinaryOperator *BO) {
    TheOperators.push_back(BO);
    return true;
  }

private:
  std::vector<clang::BinaryOperator *> TheOperators;

  std::vector<clang::BinaryOperatorKind> computeValidAlternatives(
      clang::BinaryOperator *op) {
    std::vector<BinaryOperatorKind> validAlternatives;

    Expr *lhs = op->getLHS();
    Expr *rhs = op->getRHS();
    SourceLocation loc = op->getExprLoc();

    auto &sema = getCompilerInstance().getSema();
    for (int i = BO_PtrMemD; i <= BO_Comma; ++i) {
      if (i == BO_PtrMemD || i == BO_PtrMemI || i == BO_Cmp ||
          i == op->getOpcode())
        continue;
      BinaryOperatorKind kind = static_cast<BinaryOperatorKind>(i);
      ExprResult result = sema.CreateBuiltinBinOp(loc, kind, lhs, rhs);

      if (!result.isInvalid()) validAlternatives.push_back(kind);
    }

    return validAlternatives;
  }
};

static RegisterMutator<ChangeBinop> M(
    "ChangeBinop", "Change binary expression's operator.");
```

Consider using the following APIs for easier implementation:
```
* getASTContext()
* getCompilerInstance()
* getCompilerInstance().getSema()
* getMostRecentTranslationUnitDecl(clang::FunctionDecl *)
* std::string formatAsDecl(clang::QualType ty, const std::string &placeholder)
* clang::SourceRange getExpansionRange(clang::SourceRange range)
* clang::SourceLocation getLocForEndOfToken(clang::SourceLocation loc)
* clang::SourceLocation findStringLocationFrom(clang::SourceLocation beginLoc, llvm::StringRef target)
* clang::SourceRange findBracesRange(clang::SourceLocation beginLoc, char beginBrace = '(', char endBrace = ')')
* getSourceText(const NodeType *node).str()
* getManager().getRandomGenerator()
* unsigned randIndex(unsigned n)
* bool randBool();
* template <typename Container> auto &randElement(Container &container) 
* std::string generateUniqueName(const std::string &baseName), note that this only generate a identifier for you, you should insert declaration to corresponding CompStmt by yourself
```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:01:30.880647
Here is an implementation for the DecayRandomFunctionToPointer mutator. This mutator selects a random function declaration and replaces it with a function pointer declaration with the same return type and parameters.

```cpp
#include <clang/AST/RecursiveASTVisitor.h>
#include <clang/AST/Stmt.h>
#include <clang/Basic/SourceManager.h>
#include <clang/Sema/Sema.h>

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

class DecayRandomFunctionToPointer : public Mutator, public RecursiveASTVisitor<DecayRandomFunctionToPointer> {
public:
  using Mutator::Mutator;

  bool mutate() override {
    TraverseAST(getASTContext());
    if (FunctionDecls.empty()) return false;

    auto *FD = randElement(FunctionDecls);
    std::string funcPtrDecl = formatAsDecl(FD->getType(), "*" + FD->getNameAsString());

    getRewriter().ReplaceText(FD->getSourceRange(), funcPtrDecl);

    for (auto call : CallExprs) {
      if (call->getDirectCallee() == FD) {
        std::string newText = "(*" + FD->getNameAsString() + ")";
        newText += getSourceText(findBracesRange(call->getCallee()->getEndLoc())).str();
        getRewriter().ReplaceText(call->getSourceRange(), newText);
      }
    }
    return true;
  }

  bool VisitFunctionDecl(FunctionDecl *FD) {
    FunctionDecls.push_back(FD);
    return true;
  }

  bool VisitCallExpr(CallExpr *CE) {
    if (CE->getDirectCallee()) CallExprs.push_back(CE);
    return true;
  }

private:
  std::vector<FunctionDecl *> FunctionDecls;
  std::vector<CallExpr *> CallExprs;
};

static RegisterMutator<DecayRandomFunctionToPointer> X("DecayRandomFunctionToPointer", "Replaces a random function declaration with function pointer declaration");
```

This mutator collects all function declarations and function call expressions in the AST. During mutation, it selects a random function declaration, replaces it with a function pointer declaration, and adjusts all call sites accordingly.

Please note that this implementation is based on the assumption that the input code does not contain function pointer usages that would interfere with the mutation. The mutation could fail or produce incorrect code if this assumption is not met. For a more comprehensive implementation, additional checks and handling for various corner cases might be necessary.
Q>>>>>>>>0:01:41.477060
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:28:33: error: no matching function for call to ‘DecayRandomFunctionToPointer::getSourceText(clang::SourceRange)’
   28 |         newText += getSourceText(findBracesRange(call->getCallee()->getEndLoc())).str();
      |                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
MetaMut/include/Mutator.h:125:19: note: candidate: ‘template<class NodeType> llvm::StringRef ysmut::Mutator::getSourceText(const NodeType*)’
  125 |   llvm::StringRef getSourceText(const NodeType *node) {
      |                   ^~~~~~~~~~~~~
MetaMut/include/Mutator.h:125:19: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:28:33: note:   mismatched types ‘const NodeType*’ and ‘clang::SourceRange’
   28 |         newText += getSourceText(findBracesRange(call->getCallee()->getEndLoc())).str();
      |                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:02:16.574999
The compilation error is due to the misuse of `getSourceText()` method which expects a node pointer but a `SourceRange` was passed. Instead of using `getSourceText()`, we can use `Rewriter::getRewrittenText()` which accepts a `SourceRange`. 

Here is the corrected mutator:

```cpp
#include <clang/AST/RecursiveASTVisitor.h>
#include <clang/AST/Stmt.h>
#include <clang/Basic/SourceManager.h>
#include <clang/Sema/Sema.h>

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

class DecayRandomFunctionToPointer : public Mutator, public RecursiveASTVisitor<DecayRandomFunctionToPointer> {
public:
  using Mutator::Mutator;

  bool mutate() override {
    TraverseAST(getASTContext());
    if (FunctionDecls.empty()) return false;

    auto *FD = randElement(FunctionDecls);
    std::string funcPtrDecl = formatAsDecl(FD->getType(), "*" + FD->getNameAsString());

    getRewriter().ReplaceText(FD->getSourceRange(), funcPtrDecl);

    for (auto call : CallExprs) {
      if (call->getDirectCallee() == FD) {
        std::string newText = "(*" + FD->getNameAsString() + ")";
        newText += getRewriter().getRewrittenText(findBracesRange(call->getCallee()->getEndLoc()));
        getRewriter().ReplaceText(call->getSourceRange(), newText);
      }
    }
    return true;
  }

  bool VisitFunctionDecl(FunctionDecl *FD) {
    FunctionDecls.push_back(FD);
    return true;
  }

  bool VisitCallExpr(CallExpr *CE) {
    if (CE->getDirectCallee()) CallExprs.push_back(CE);
    return true;
  }

private:
  std::vector<FunctionDecl *> FunctionDecls;
  std::vector<CallExpr *> CallExprs;
};

static RegisterMutator<DecayRandomFunctionToPointer> X("DecayRandomFunctionToPointer", "Replaces a random function declaration with function pointer declaration");
```

This adjustment should resolve the compilation problem. Please review the changes above and let me know if you need further assistance.
Q>>>>>>>>0:02:57.089880
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The mutator is transforming a semantically valid program into an invalid one.

If this consistently happens, you may try other approaches.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
output/output.c:3:31: error: expected ';' after top level declarator
void (*printArray)(int *, int)
                              ^
                              ;
1 error generated.

```

Input program:
```
#include <stdio.h>

void printArray(int arr[], int len) {
    for (int i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    printArray(arr, 5);
    return 0;
}
```

Output program:
```
#include <stdio.h>

void (*printArray)(int *, int)

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    (*printArray)(arr, 5);
    return 0;
}
```

Difference between the input and output programs:
```
--- output/input.c
+++ output/output.c
@@ -1,14 +1,9 @@
 #include <stdio.h>
 
-void printArray(int arr[], int len) {
-    for (int i = 0; i < len; i++) {
-        printf("%d ", arr[i]);
-    }
-    printf("\n");
-}
+void (*printArray)(int *, int)
 
 int main() {
     int arr[] = {1, 2, 3, 4, 5};
-    printArray(arr, 5);
+    (*printArray)(arr, 5);
     return 0;
 }
```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:03:37.410480
It seems the problem is that the mutator is not correctly handling the transformation of the function declaration to a function pointer. It's only replacing the function declaration with the function pointer type and identifier but it's not including the function body. Here's the corrected mutator:

```cpp
#include <clang/AST/RecursiveASTVisitor.h>
#include <clang/AST/Stmt.h>
#include <clang/Basic/SourceManager.h>
#include <clang/Sema/Sema.h>

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

class DecayRandomFunctionToPointer : public Mutator, public RecursiveASTVisitor<DecayRandomFunctionToPointer> {
public:
  using Mutator::Mutator;

  bool mutate() override {
    TraverseAST(getASTContext());
    if (FunctionDecls.empty()) return false;

    auto *FD = randElement(FunctionDecls);
    std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();

    getRewriter().ReplaceText(FD->getSourceRange(), funcPtrDecl);

    for (auto call : CallExprs) {
      if (call->getDirectCallee() == FD) {
        std::string newText = "(*" + FD->getNameAsString() + ")";
        newText += getRewriter().getRewrittenText(findBracesRange(call->getCallee()->getEndLoc()));
        getRewriter().ReplaceText(call->getSourceRange(), newText);
      }
    }
    return true;
  }

  bool VisitFunctionDecl(FunctionDecl *FD) {
    FunctionDecls.push_back(FD);
    return true;
  }

  bool VisitCallExpr(CallExpr *CE) {
    if (CE->getDirectCallee()) CallExprs.push_back(CE);
    return true;
  }

private:
  std::vector<FunctionDecl *> FunctionDecls;
  std::vector<CallExpr *> CallExprs;
};

static RegisterMutator<DecayRandomFunctionToPointer> X("DecayRandomFunctionToPointer", "Replaces a random function declaration with function pointer declaration and maintains the function body");
```
In this version, the function body is maintained in the new function pointer declaration. This should resolve the issue where the output program is semantically invalid due to the missing function body.
Q>>>>>>>>0:03:47.748064
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:04:00.779330
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
Q>>>>>>>>0:04:00.786767
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:04:15.159641
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
Q>>>>>>>>0:04:15.170256
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:04:27.780090
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
Q>>>>>>>>0:04:27.791915
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:04:41.239030
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
Q>>>>>>>>0:04:41.253231
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.
A<<<<<<<<0:04:55.196919
Based on the results of your DecayRandomFunctionToPointer implementation, we have encountered an issue:

The implemented mutator is not compiling.

To aid in troubleshooting, please find the relevant information below:

Compilation errors:
```
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp: In member function ‘virtual bool DecayRandomFunctionToPointer::mutate()’:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:94: error: no match for ‘operator+’ (operand types are ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                           |                                                                                 |
      |                                           std::string {aka std::__cxx11::basic_string<char>}                                clang::SourceRange
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note: candidate: ‘template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1276 |     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1276:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:585:5: note: candidate: ‘template<class _Iterator> constexpr std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)’
  585 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:585:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::reverse_iterator<_Iterator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/include/c++/11/memory:63,
                 from /usr/lib/llvm-12/include/llvm/Support/Casting.h:20,
                 from /usr/lib/llvm-12/include/clang/Basic/LLVM.h:21,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:16,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note: candidate: ‘template<class _Iterator> constexpr std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)’
 1700 |     operator+(typename move_iterator<_Iterator>::difference_type __n,
      |     ^~~~~~~~
/usr/include/c++/11/bits/stl_iterator.h:1700:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::move_iterator<_IteratorL>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6095:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6095 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6095:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1169 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1169:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:56,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 1189 |     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.tcc:1189:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6132:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 6132 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6132:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6148:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, _CharT)’
 6148 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6160:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6160 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6160:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6166:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6166 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6166:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6172:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6172 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6172:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6194:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6194 |     operator+(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6194:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘std::__cxx11::basic_string<char>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6200:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&)’
 6200 |     operator+(_CharT __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6200:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6206:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, const _CharT*)’
 6206 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6206:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   mismatched types ‘const _CharT*’ and ‘clang::SourceRange’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/string:55,
                 from /usr/lib/llvm-12/include/llvm/Support/ErrorHandling.h:18,
                 from /usr/lib/llvm-12/include/llvm/ADT/SmallVector.h:18,
                 from /usr/lib/llvm-12/include/clang/AST/AttrIterator.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/Attr.h:17,
                 from /usr/lib/llvm-12/include/clang/AST/RecursiveASTVisitor.h:16,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6212:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&, _CharT)’
 6212 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6212:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘clang::SourceRange’)
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from /usr/include/c++/11/valarray:603,
                 from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/bits/valarray_after.h:405:5: note: candidate: ‘template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus, typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)’
  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/valarray_after.h:405:5: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::_Expr<_Dom1, typename _Dom1::value_type>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
In file included from MetaMut/include/json.hpp:171,
                 from MetaMut/include/Mutator.h:18,
                 from MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:6:
/usr/include/c++/11/valarray:1186:1: note: candidate: ‘template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)’
 1186 | _DEFINE_BINARY_OPERATOR(+, __plus)
      | ^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/valarray:1186:1: note:   template argument deduction/substitution failed:
MetaMut/lib/mutators/DecayRandomFunctionToPointer.cpp:21:126: note:   ‘clang::SourceRange’ is not derived from ‘const std::valarray<_Tp>’
   21 |     std::string funcPtrDecl = formatAsDecl(FD->getType(), "(" + FD->getNameAsString() + ")") + FD->getBody()->getSourceRange();
      |                                                                                                                              ^
make[2]: *** [CMakeFiles/MetaMut.dir/build.make:188: CMakeFiles/MetaMut.dir/lib/mutators/DecayRandomFunctionToPointer.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/MetaMut.dir/all] Error 2
make: *** [Makefile:91: all] Error 2

```

Ensure your code is complete, functional, and free of pseudo code. You may use the following template as a reference:
```
{Includes}

#include "Mutator.h"
#include "MutatorManager.h"

using namespace clang;
using namespace ysmut;

// this is mutator
class {MutatorName} : public Mutator,
                      public clang::RecursiveASTVisitor<{MutatorName}> {
  using Mutator::Mutator;

  bool {Visitor}({NodeType}) {
    /* Step 2, Collect mutation instances */ }

  bool mutate() override {
    // Step 1, Traverse the AST
    // Step 3, Randomly select a mutation instance
    // Step 4, Checking mutation validity
    // Step 5, Perform mutation
    // Step 6, Return true if changed
  }

private:
  {VarsToStoreMutationInstances}
  // note, you may use multiple vars to store a mutation instance
  // for example, if you want to remove a function, you may
  // 1. use TheFuncs to store all functions
  // 2. use map<FuncDecl, CallExpr> to store all functions' corresponding call exprs
};

static RegisterMutator<{MutatorName}> M(
    "{MutatorName}", "{DetailedMutatorDescription}");
```

**Notes about counterintuitive clang API**
- Don't use operator new for creating AST nodes.
- Perform mutations only inside mutate, using TraverseXXX or VisitXXX for node collection.
- Use Rewriter for AST modifications, direct changes aren't allowed.
- For inserting after a statement A, use ReplaceText(A.getSourceRange(), getSourceText(A).str() + Delim + InsertedSource), not InsertAfter.
- To insert before FunctionDecl A, use InsertTextBefore(getMostRecentTranslationUnitDecl(A)->getBeginLoc(), ...), not InsertTextBefore(A->getBeginLoc(), ...).
- Use formatAsDecl(type, id) for declaration printing, not string concatenation.
- Replacements for VarDecl A shouldn't have type specifiers, as A->getSourceRange() excludes them.
- To insert after VarDecl A, use InsertTextAfter(getLocForEndOfToken(A->getEndLoc())), not InsertTextAfter(A->getEndLoc()).
- Avoid inserting at A->getBeginLoc() of FunctionDecl/VarDecl A or replacing A->getSourceRange as type specifier not in that range.======= 2023-10-06 12:57:03.419106 =======
Traceback (most recent call last):
  File "MetaMut/scripts/main.py", line 52, in test_gpt
    mg.run()
  File "MetaMut/scripts/MetaMut.py", line 307, in run
    impl = self.refine(impl, examples)
  File "MetaMut/scripts/MetaMut.py", line 281, in refine
    impl = self.query('RefineMutator')
  File "MetaMut/scripts/MetaMut.py", line 265, in query
    raise ExceedMaxRetryQueryTimes()
MetaMut.ExceedMaxRetryQueryTimes
